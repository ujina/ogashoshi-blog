{"remainingRequest":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeaderNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeaderNavbar.vue","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHRocm90dGxlIGZyb20gJ2xvZGFzaC50aHJvdHRsZSc7CmltcG9ydCBJY29uIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL0ljb24udnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUaGVIZWFkZXJOYXZiYXInLAogIGNvbXBvbmVudHM6IHsKICAgIEljb24KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZml4ZWQ6IGZhbHNlLAogICAgICBzaG93TmF2TGlua3M6IGZhbHNlCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBuYXZiYXJDbGFzcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBmaXhlZDogdGhpcy5maXhlZAogICAgICB9OwogICAgfQoKICB9LAoKICBtb3VudGVkKCkgewogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRocm90dGxlKCgpID0+IHsKICAgICAgdGhpcy5maXhlZCA9IHdpbmRvdy5zY3JvbGxZICE9PSAwOwogICAgfSksIDEwMCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgaXNFeHRlcm5hbChsaW5rKSB7CiAgICAgIHJldHVybiAvXihodHRwcz86fG1haWx0bzp8dGVsOikvLnRlc3QobGluayk7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAqEA;AACA;AAEA;EACAA,uBADA;EAGAC;IACAC;EADA,CAHA;;EAOAC;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CAZA;;EAcAC;IACAC;MACA;QACAH;MADA;IAGA;;EALA,CAdA;;EAsBAI;IACAC;MACA;IACA,CAFA,GAEA,GAFA;EAGA,CA1BA;;EA4BAC;IACAC;MACA;IACA;;EAHA;AA5BA","names":["name","components","Icon","data","fixed","showNavLinks","computed","navbarClass","mounted","window","methods","isExternal"],"sourceRoot":"node_modules/vuepress-theme-meteorlxy/lib/components","sources":["TheHeaderNavbar.vue"],"sourcesContent":["<template>\n  <div>\n    <nav\n      class=\"navbar\"\n      :class=\"navbarClass\"\n    >\n      <div class=\"container\">\n        <RouterLink :to=\"$localePath\">\n          <span\n            v-if=\"$siteTitle\"\n            class=\"navbar-site-name\"\n          >\n            {{ $siteTitle }}\n          </span>\n        </RouterLink>\n\n        <div\n          class=\"navbar-toggler\"\n          @click=\"showNavLinks = !showNavLinks\"\n        >\n          <Icon\n            name=\"menu\"\n            size=\"1.2em\"\n          />\n        </div>\n\n        <div\n          class=\"navbar-links\"\n          :class=\"{\n            'show': showNavLinks,\n          }\"\n        >\n          <template v-for=\"nav of $themeConfig.nav\">\n            <RouterLink\n              v-if=\"!isExternal(nav.link)\"\n              :key=\"nav.text\"\n              :to=\"nav.link\"\n              class=\"navbar-link\"\n              :exact=\"nav.exact || false\"\n              @click.native=\"showNavLinks = false\"\n            >\n              {{ nav.text }}\n            </RouterLink>\n\n            <a\n              v-else\n              :key=\"nav.text\"\n              :href=\"nav.link\"\n              class=\"navbar-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span>{{ nav.text }}</span>\n\n              <OutboundLink />\n            </a>\n          </template>\n        </div>\n      </div>\n    </nav>\n\n    <div\n      v-show=\"fixed\"\n      class=\"navbar-holder\"\n    />\n  </div>\n</template>\n\n<script>\nimport throttle from 'lodash.throttle'\nimport Icon from '@theme/components/Icon.vue'\n\nexport default {\n  name: 'TheHeaderNavbar',\n\n  components: {\n    Icon,\n  },\n\n  data () {\n    return {\n      fixed: false,\n      showNavLinks: false,\n    }\n  },\n\n  computed: {\n    navbarClass () {\n      return {\n        fixed: this.fixed,\n      }\n    },\n  },\n\n  mounted () {\n    window.addEventListener('scroll', throttle(() => {\n      this.fixed = window.scrollY !== 0\n    }), 100)\n  },\n\n  methods: {\n    isExternal (link) {\n      return /^(https?:|mailto:|tel:)/.test(link)\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n@require '~@theme/styles/variables'\n\n$gutter = 0.7rem\n$lineHeight = $navbarHeight - ($gutter * 2)\n\n.navbar-holder\n  position relative\n  height $navbarHeight\n.navbar\n  position relative\n  z-index 20\n  top 0\n  left 0\n  right 0\n  box-sizing border-box\n  height $navbarHeight\n  line-height $lineHeight\n  padding $gutter $gutter * 2\n  border-bottom 1px solid $borderColor\n  color $textColor\n  background-color alpha($navbarColor, 0.8)\n  transition all 0.5s ease-out\n  &.fixed\n    position fixed\n    background-color $navbarColor\n    @media (max-width $MQMobile - 1px)\n      .navbar-links\n        background-color $navbarColor\n  .navbar-site-name\n    display inline-block\n    position relative\n    font-size 1.2rem\n    font-weight 600\n    color $accentColor\n    max-width 'calc(100% - %s)' % $lineHeight\n    max-height $lineHeight\n    overflow hidden\n  .navbar-toggler\n    float right\n    cursor pointer\n    box-sizing border-box\n    width $lineHeight\n    border-radius 50%\n    border solid 2px transparent\n    text-align center\n    z-index 100\n    .icon\n      fill $accentColor\n    @media (max-width $MQMobile - 1px)\n      display inline\n    @media (min-width $MQMobile)\n      display none\n  .navbar-links\n    @media (max-width $MQMobile - 1px)\n      &.show\n        display block\n      display none\n      position fixed\n      top $navbarHeight\n      right 0\n      text-align center\n      padding $gutter 2rem\n      border 1px solid $borderColor\n      border-top none\n      background-color alpha($navbarColor, 0.8)\n      z-index 100\n      transition all 0.5s ease-out\n    @media (min-width $MQMobile)\n      float right\n      margin 0\n      padding 0\n      line-height $lineHeight\n      list-style none\n  .navbar-link\n    color $textColor\n    transition all 0.3s\n    border-bottom 2px solid transparent\n    &:hover\n    &.router-link-active\n      border-bottom 2px solid $accentColor\n    @media (max-width $MQMobile - 1px)\n      display block\n    @media (min-width $MQMobile)\n      display inline-block\n      height 100%\n      padding 0 0.25rem\n      margin-left 1rem\n      margin-bottom -10px\n</style>\n"]}]}