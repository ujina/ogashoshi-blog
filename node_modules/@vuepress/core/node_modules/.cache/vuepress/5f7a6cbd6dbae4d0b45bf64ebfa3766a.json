{"remainingRequest":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostsFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostsFilter.vue","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFBvc3RzRmlsdGVyQ2F0ZWdvcmllcyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Qb3N0c0ZpbHRlckNhdGVnb3JpZXMudnVlJzsKaW1wb3J0IFBvc3RzRmlsdGVyVGFncyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Qb3N0c0ZpbHRlclRhZ3MudnVlJzsKaW1wb3J0IFBvc3RzRmlsdGVyU2VhcmNoIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1Bvc3RzRmlsdGVyU2VhcmNoLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdHNGaWx0ZXInLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RzRmlsdGVyQ2F0ZWdvcmllcywKICAgIFBvc3RzRmlsdGVyVGFncywKICAgIFBvc3RzRmlsdGVyU2VhcmNoCiAgfSwKICBwcm9wczogewogICAgcG9zdHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGNhdGVnb3JpZXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgdGFnczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBzZWFyY2g6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsdGVyVGFnczogW10sCiAgICAgIGZpbHRlckNhdGVnb3J5OiBudWxsLAogICAgICBmaWx0ZXJTZWFyY2g6ICcnCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFBvc3RzKCkgewogICAgICBsZXQgZmlsdGVyZWRQb3N0cyA9IHRoaXMucG9zdHMgfHwgdGhpcy4kcG9zdHM7CgogICAgICBpZiAodGhpcy5jYXRlZ29yaWVzICYmIHRoaXMuZmlsdGVyQ2F0ZWdvcnkpIHsKICAgICAgICBmaWx0ZXJlZFBvc3RzID0gZmlsdGVyZWRQb3N0cy5maWx0ZXIocCA9PiBwLmNhdGVnb3J5ID09PSB0aGlzLmZpbHRlckNhdGVnb3J5KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMudGFncyAmJiB0aGlzLmZpbHRlclRhZ3MubGVuZ3RoICE9PSAwKSB7CiAgICAgICAgZmlsdGVyZWRQb3N0cyA9IGZpbHRlcmVkUG9zdHMuZmlsdGVyKHAgPT4gewogICAgICAgICAgY29uc3QgcG9zdFRhZ3MgPSBwLnRhZ3M7CgogICAgICAgICAgZm9yIChjb25zdCB0YWcgb2YgdGhpcy5maWx0ZXJUYWdzKSB7CiAgICAgICAgICAgIGlmIChwb3N0VGFncy5pbmNsdWRlcyh0YWcpKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNlYXJjaCAmJiB0aGlzLmZpbHRlclNlYXJjaCAhPT0gJycpIHsKICAgICAgICBjb25zdCBzZWFyY2hTdHJpbmcgPSB0aGlzLmZpbHRlclNlYXJjaC50b0xvd2VyQ2FzZSgpLnRyaW0oKTsKCiAgICAgICAgY29uc3QgbWF0Y2ggPSBpdGVtID0+IHsKICAgICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLm1hcChpID0+IG1hdGNoKGkpKS5pbmNsdWRlcyh0cnVlKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfTsKCiAgICAgICAgZmlsdGVyZWRQb3N0cyA9IGZpbHRlcmVkUG9zdHMuZmlsdGVyKHAgPT4gbWF0Y2gocC50aXRsZSkgfHwgbWF0Y2gocC5leGNlcnB0KSB8fCBtYXRjaChwLmZyb250bWF0dGVyLmRlc2NyaXB0aW9uKSB8fCBtYXRjaChwLnRhZ3MpIHx8IG1hdGNoKHAuY2F0ZWdvcnkpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZpbHRlcmVkUG9zdHM7CiAgICB9CgogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbHRlcmVkUG9zdHM6IHsKICAgICAgaW1tZWRpYXRlOiB0cnVlLAoKICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7CiAgICAgIH0KCiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":"AA0CA;AACA;AACA;AAEA;EACAA,mBADA;EAGAC;IACAC,qBADA;IAEAC,eAFA;IAGAC;EAHA,CAHA;EASAC;IACAC;MACAC,WADA;MAEAC,eAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,aADA;MAEAC,eAFA;MAGAC;IAHA,CANA;IAWAE;MACAJ,aADA;MAEAC,eAFA;MAGAC;IAHA,CAXA;IAgBAG;MACAL,aADA;MAEAC,eAFA;MAGAC;IAHA,CAhBA;IAqBAI;MACAN,WADA;MAEAC,eAFA;MAGAC;IAHA;EArBA,CATA;;EAqCAK;IACA;MACAC,cADA;MAEAC,oBAFA;MAGAC;IAHA;EAKA,CA3CA;;EA6CAC;IACAC;MACA;;MAEA;QACAA;MACA;;MAEA;QACAA;UACA;;UACA;YACA;cACA;YACA;UACA;;UACA;QACA,CARA;MASA;;MAEA;QACA;;QACA;UACA;YACA;UACA;;UAEA;YACA;UACA;;UAEA;QACA,CAVA;;QAWAA,0CACAC,kBACAA,gBADA,IAEAA,gCAFA,IAGAA,aAHA,IAIAA,iBALA;MAOA;;MAEA;IACA;;EA3CA,CA7CA;EA2FAC;IACAF;MACAG,eADA;;MAEAC;QACA;MACA;;IAJA;EADA;AA3FA","names":["name","components","PostsFilterCategories","PostsFilterTags","PostsFilterSearch","props","posts","type","required","default","categories","tags","search","value","data","filterTags","filterCategory","filterSearch","computed","filteredPosts","match","watch","immediate","handler"],"sourceRoot":"node_modules/vuepress-theme-meteorlxy/lib/components","sources":["PostsFilter.vue"],"sourcesContent":["<template>\n  <div class=\"main-div\">\n    <div\n      v-if=\"categories\"\n      class=\"filter-categories\"\n    >\n      <h3>\n        <RouterLink to=\"/posts/categories/\">\n          {{ $themeConfig.lang.categories }}\n        </RouterLink>\n      </h3>\n\n      <PostsFilterCategories v-model=\"filterCategory\" />\n    </div>\n\n    <div\n      v-if=\"tags\"\n      class=\"filter-tags\"\n    >\n      <h3>\n        <RouterLink to=\"/posts/tags/\">\n          {{ $themeConfig.lang.tags }}\n        </RouterLink>\n      </h3>\n\n      <PostsFilterTags v-model=\"filterTags\" />\n    </div>\n\n    <div\n      v-if=\"search\"\n      class=\"filter-search\"\n    >\n      <h3>\n        {{ $themeConfig.lang.search }}\n      </h3>\n\n      <PostsFilterSearch v-model=\"filterSearch\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostsFilterCategories from '@theme/components/PostsFilterCategories.vue'\nimport PostsFilterTags from '@theme/components/PostsFilterTags.vue'\nimport PostsFilterSearch from '@theme/components/PostsFilterSearch.vue'\n\nexport default {\n  name: 'PostsFilter',\n\n  components: {\n    PostsFilterCategories,\n    PostsFilterTags,\n    PostsFilterSearch,\n  },\n\n  props: {\n    posts: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n    categories: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    tags: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    search: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    value: {\n      type: Array,\n      required: false,\n      default: () => [],\n    },\n  },\n\n  data () {\n    return {\n      filterTags: [],\n      filterCategory: null,\n      filterSearch: '',\n    }\n  },\n\n  computed: {\n    filteredPosts () {\n      let filteredPosts = this.posts || this.$posts\n\n      if (this.categories && this.filterCategory) {\n        filteredPosts = filteredPosts.filter(p => p.category === this.filterCategory)\n      }\n\n      if (this.tags && this.filterTags.length !== 0) {\n        filteredPosts = filteredPosts.filter(p => {\n          const postTags = p.tags\n          for (const tag of this.filterTags) {\n            if (postTags.includes(tag)) {\n              return true\n            }\n          }\n          return false\n        })\n      }\n\n      if (this.search && this.filterSearch !== '') {\n        const searchString = this.filterSearch.toLowerCase().trim()\n        const match = item => {\n          if (typeof item === 'string') {\n            return item.toLowerCase().includes(searchString)\n          }\n\n          if (Array.isArray(item)) {\n            return item.map(i => match(i)).includes(true)\n          }\n\n          return false\n        }\n        filteredPosts = filteredPosts.filter(p =>\n          match(p.title) ||\n          match(p.excerpt) ||\n          match(p.frontmatter.description) ||\n          match(p.tags) ||\n          match(p.category),\n        )\n      }\n\n      return filteredPosts\n    },\n  },\n\n  watch: {\n    filteredPosts: {\n      immediate: true,\n      handler (val) {\n        this.$emit('input', val)\n      },\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n@require '~@theme/styles/variables'\n\n.filter-categories,\n.filter-tags\n  a\n    color $textColor\n</style>\n"]}]}