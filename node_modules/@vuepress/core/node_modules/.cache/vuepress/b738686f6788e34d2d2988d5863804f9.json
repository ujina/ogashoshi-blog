{"remainingRequest":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostMeta.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostMeta.vue","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/toruogasawara/GitHub/ogashoshi-blog/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQb3N0TWV0YScsCiAgY29tcHV0ZWQ6IHsKICAgIHRoaXNJbmRleCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHBvc3RzLmluZGV4T2YodGhpcy4kcGFnZSk7CiAgICB9LAoKICAgIHByZXZQb3N0KCkgewogICAgICBjb25zdCBuZXh0SW5kZXggPSB0aGlzLnRoaXNJbmRleCArIDE7CiAgICAgIHJldHVybiBuZXh0SW5kZXggPiB0aGlzLiRwb3N0cy5sZW5ndGggLSAxID8gbnVsbCA6IHRoaXMuJHBvc3RzW25leHRJbmRleF07CiAgICB9LAoKICAgIG5leHRQb3N0KCkgewogICAgICBjb25zdCBwcmV2SW5kZXggPSB0aGlzLnRoaXNJbmRleCAtIDE7CiAgICAgIHJldHVybiBwcmV2SW5kZXggPCAwID8gbnVsbCA6IHRoaXMuJHBvc3RzW3ByZXZJbmRleF07CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAuCA;EACAA,gBADA;EAGAC;IACAC;MACA;IACA,CAHA;;IAKAC;MACA;MACA;IACA,CARA;;IAUAC;MACA;MACA;IACA;;EAbA;AAHA","names":["name","computed","thisIndex","prevPost","nextPost"],"sourceRoot":"node_modules/vuepress-theme-meteorlxy/lib/components","sources":["PostMeta.vue"],"sourcesContent":["<template>\n  <section class=\"post-meta main-div\">\n    <section class=\"post-date clearfix\">\n      <span\n        v-if=\"$page.createdAt\"\n        class=\"create-date\"\n      >\n        {{ `${$themeConfig.lang.createdAt} : ${$page.createdAt}` }}\n      </span>\n\n      <span\n        v-if=\"$page.updatedAt\"\n        class=\"update-date\"\n      >\n        {{ `${$themeConfig.lang.updatedAt} : ${$page.updatedAt}` }}\n      </span>\n    </section>\n\n    <section class=\"post-links\">\n      <RouterLink\n        v-if=\"prevPost\"\n        :to=\"prevPost.path\"\n        class=\"post-link\"\n      >\n        {{ `${$themeConfig.lang.prevPost} : ${prevPost.title}` }}\n      </RouterLink>\n\n      <RouterLink\n        v-if=\"nextPost\"\n        :to=\"nextPost.path\"\n        class=\"post-link\"\n      >\n        {{ `${$themeConfig.lang.nextPost} : ${nextPost.title}` }}\n      </RouterLink>\n    </section>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'PostMeta',\n\n  computed: {\n    thisIndex () {\n      return this.$posts.indexOf(this.$page)\n    },\n\n    prevPost () {\n      const nextIndex = this.thisIndex + 1\n      return nextIndex > this.$posts.length - 1 ? null : this.$posts[nextIndex]\n    },\n\n    nextPost () {\n      const prevIndex = this.thisIndex - 1\n      return prevIndex < 0 ? null : this.$posts[prevIndex]\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n@require '~@theme/styles/variables'\n\n.post-meta\n  .post-date\n    color lighten($grayTextColor, 50%)\n    margin-bottom 1rem\n    .create-date\n      float left\n    .update-date\n      float right\n  .post-links\n    .post-link\n      display block\n      line-height 1.7\n      color lighten($grayTextColor, 20%)\n      font-weight normal\n      transition all 0.2s\n      &:hover\n        color $accentColor\n</style>\n"]}]}